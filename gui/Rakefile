require 'rake/clean'
require 'pathname'

require_relative 'lib/modules/booster_stage'
require_relative 'lib/modules/cubic'
require_relative 'lib/modules/func'
require_relative 'lib/modules/func_6'
require_relative 'lib/modules/hostage'
require_relative 'lib/modules/ranger'
require_relative 'lib/modules/stage'
require_relative 'lib/modules/swave'
require_relative 'lib/modules/tapers'
require_relative 'lib/modules/upstage'
require_relative 'lib/modules/xycloid'

$modules = [
    DHE::BoosterStage.new,
    DHE::Cubic.new,
    DHE::Func.new,
    DHE::Func6.new,
    DHE::Hostage.new,
    DHE::Ranger.new,
    DHE::Stage.new,
    DHE::Swave.new,
    DHE::Tapers.new,
    DHE::Upstage.new,
    DHE::Xycloid.new,
]

$svg_dir = Pathname('_svg')
$manual_dir = Pathname('_manual')

directory $manual_dir
directory $svg_dir

task default: [:all] do
end

task all: [:controls, :modules, :images] do
end

# SVG files for the manual (faceplates plus hardware)
task images: [$manual_dir] do
  $modules
      .map(&:manual_image_file)
      .each {|f| f.write($manual_dir)}
end

# SVG files for module faceplates (sans hardware)
task modules: [$svg_dir] do
  $modules
      .map(&:faceplate_file)
      .each {|f| f.write($svg_dir)}
end

# SVG files for the individual controls
task controls: [$svg_dir] do
  $modules
      .flat_map(&:control_files)
      .each {|f| f.write($svg_dir)}
end

desc 'Clobber all files, then build all SVG files'
task fresh: [:clobber, :default]

CLEAN.include $manual_dir, $svg_dir
